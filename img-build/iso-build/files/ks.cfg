eula --agreed
install
cdrom
text
skipx
unsupported_hardware
reboot --eject

keyboard us
lang en_US.UTF-8
timezone --utc Etc/UTC

network --bootproto=dhcp --ipv6=auto --activate --device=eth0
selinux --permissive
firewall --disabled
firstboot --disabled

rootpw --plaintext root
auth --enableshadow --passalgo=sha512 --kickstart

bootloader --timeout=1 --location=mbr
zerombr
clearpart --all
part / --fstype ext4 --size=1 --grow

%packages --nobase --excludedocs
*
%end

%post --erroronfail
# Copy docker images to filesytem
mount /dev/sr0 /mnt
cp /mnt/software/images/*.tar /opt
umount /mnt

# Load images in to docker on first boot then disable and delete
cat <<EOF > /usr/lib/systemd/system/docker-image-load.service 
[Unit]
Description=docker-image-load
After=docker.service
Before=consul.service
ConditionDirectoryNotEmpty=|/opt

[Service]
ExecStart=/usr/bin/find /opt -type f -name '*.tar' -exec sh -c '/bin/docker load -i {} && /usr/bin/rm -f {}' \;
ExecStart=/usr/bin/systemctl disable docker-image-load
ExecStart=/usr/bin/rm -f /usr/lib/systemd/system/docker-image-load.service
Type=oneshot
TimeoutSec=0
RemainAfterExit=no

[Install]
WantedBy=multi-user.target
EOF

# Kernel config
echo "kernel.printk = 3 4 1 7" > /etc/sysctl.d/printk.conf

# Enable services
systemctl enable docker-image-load
systemctl enable docker
systemctl enable apcid

# Disable services
systemctl disable kdump

# Delete anaconda-ks.cfg
rm -f /root/anaconda-ks.cfg

# Write build version
echo "BUILD_TOKEN" > /.build

%end

# EOF
